luks_cust_device() {
        # Check if a luks device is specified in the cmdline
        # Only a physical device or physical partition is supported
        #plymouth message --text="Starting luks custom dev detection" && sleep 1
        if grep -q luks.cust.dev /proc/cmdline; then
                #plymouth message --text="Detected luks.cust.dev option in cmdline" && sleep 2
                for x in $(cat /proc/cmdline); do
                        if [ "$(echo ${x} | grep -c luks.cust.dev)" -eq "1" ]; then
                                #plymouth message --text="Detected boot arg \"${x}\"" && sleep 1
		                luks_cust_device="$(echo ${x} | awk -F'=' '{print $2}')"
                                luks_dev_name="$(basename ${luks_cust_device})"
                                #plymouth message --text=" luks_cust_device = ${luks_cust_device}" && sleep 1
                                break
                        fi
                done
        #else
                #plymouth message --text="NOT Detected luks.cust.dev arg in cmdline" && sleep 2
        fi
        # If the supplied device not exist, continue normal boot
        [ -e "${luks_cust_device}" ] || return
        #plymouth message --text="Device luks cust in cmdline EXIST" && sleep 1
        # If the supplied device is not luks, continue normal boot
	[ "$(blkid ${luks_cust_device} -o value -s TYPE)" == "crypto_LUKS" ] || return
        #plymouth message --text="6- Device is luks" && sleep 3
        # Check ykchalresp version
        #result="$(ykchalresp -V 2>&1)"
        #plymouth message --text="7- ykchalresp version = ${result}" && sleep 3
        # Check if yubikey is present
        yk_present="0"
        t_remain=20
        [ "$(ykinfo -q -2)" ] && yk_present="1"
        while [ "${t_remain}" -gt "0" ] && [ "${yk_present}" -ne "1" ]; do
                plymouth message --text="Insert a yubikey or wait to boot in ${t_remain} seconds"
                [ "$(ykinfo -q -2)" ] && yk_present="1"
                t_remain=$((t_remain - 1))
                sleep 1
        done
        # If no yk inserted, continue normal boot
        if [ "${yk_present}" -ne "1" ]; then
                #plymouth message --text="Resuming normal boot..." && sleep 2
                return 0
        else
                plymouth message --text="Yubikey inserted" && sleep 2
        fi
        # Quit plymouth
	[ -e "/usr/bin/plymouth" ] && plymouth quit || true
        # Enable touchscreen
	halium_hook setup_touchscreen
        # Load ykluks config
        . /etc/ykluks.cfg
        # Ask password and get challenge
        # TODO: Implement 3 tries
        PW="$(unl0kr)"
        R="$(printf %s "${PW}" | ykchalresp -2 -i- 2>/dev/null || true)"
	_passphrase=$(printf '%s' "$R")
        # Unlock device
	printf %s "${_passphrase}" | cryptsetup luksOpen "${luks_cust_device}" "${luks_dev_name}_crypt" 2>&1;
        # Clean password vars
        PW=""
        R=""
        _passphrase=""
        # Disable touchscreen
	halium_hook teardown_touchscreen

        # Check for lvm in luks volume
        ##cust_vg_name="$(pvscan | grep "${luks_dev_name}_crypt" | awk '{print $4}')"
        ##if [ -n "${cust_vg_name}" ]; then
        ##        plymouth message --text="Found ${cust_vg_name} vg"
        ##fi
}
